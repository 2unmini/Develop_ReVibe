name: docker-multi-stage build

# 워크플로우 실행 조건
on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - featureGitAction-cicd-구현

# 워크플로우 작업 정의
jobs:
  docker-build-and-push:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
         file: ./Dockerfile
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_TAG_NAME}}:latest

  deploy-to-ec2:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    # https://github.com/marketplace/actions/ssh-remote-commands
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |            
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=8080-8080")
            if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
            fi
            
            sudo docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKER_IMAGE_TAG_NAME }}:latest
            sudo docker run -d -p 8080:8080 \
            -e DB_USERNAME=${{secrets.DB_USERNAME}} \
            -e DB_PASSWORD=${{secrets.DB_PASSWORD}} \
            -e DB_URL=${{secrets.DB_URL}} \
            ${{ vars.DOCKERHUB_USERNAME }}/test:latest
            

      # 6. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 7. AWS 배포
      - name: SSH Connection and Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          DOCKER_USER: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
          DATABASE_URL: ${{ secrets.DB_URL }}
          DATABASE_USERNAME: ${{ secrets.DB_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DB_PASSWORD }}

          script: |
            echo "$DOCKER_PASS" | sudo docker login -u "$DOCKER_USER" --password-stdin
            sudo docker rm -f server 
            sudo docker pull "${{secrets.DOCKER_HUB_REPOSITORY}}:main"
            sudo docker run -d \
              --name server \
              -e TZ=Asia/Seoul \
              -e DATABASE_URL=${{ secrets.DB_URL }} \
              -e DATABASE_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
              -e DATABASE_PASSWORD=${{ secrets.DOCKER_PASSWORD }} \
              -p 8080:8080 "${{secrets.DOCKER_HUB_REPOSITORY}}":main

